events {
	worker_connections 1024;
}

http {
# Redirect all http conexions to https in the same port
	server {
	    listen 8080;
	    server_name domain-name.com;
	    return 301 https://$host:8000$request_uri;
	}

	# Manage the https conexions in port 8000
	server {
	    listen 8000 ssl;
	    server_name domain-name.com;

	    ssl_certificate /etc/nginx/certs/cert.pem;
	    ssl_certificate_key /etc/nginx/certs/cert.key;

	    ssl_protocols TLSv1.2 TLSv1.3;
	    ssl_prefer_server_ciphers on;

	    location / {
		proxy_pass http://back:8000;  # Redirect to app
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		proxy_read_timeout 300;
		proxy_connect_timeout 300;
		proxy_send_timeout 300;
	    }

	    location /ws/ {
		proxy_pass http://back:8000;  # Pass requests to backend
		proxy_http_version 1.1; # Web sockets need HTTP/1.1 to work
		proxy_set_header Upgrade $http_upgrade; # header to transform initial http conection to ws persistant
		proxy_set_header Connection "Upgrade";
		proxy_set_header Host $host; # Original host
		proxy_set_header X-Real-IP $remote_addr; # Real IP of client to avoid seeing only nginx IP
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Adds client IP to list
		proxy_set_header X-Forwarded-Proto $scheme; # Tells wich original protocol was used

		proxy_read_timeout 300;
		proxy_connect_timeout 300;
		proxy_send_timeout 300;
	    }
	}
}
